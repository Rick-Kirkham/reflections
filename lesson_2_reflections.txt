What happens when you initialize a repository? Why do you need to do it?
So the hidden .git folder with its file-tracking data is created.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It enables me to choose a subset of the files in the working directory to commit to the repository.

How can you use the staging area to make sure you have one commit per logical change?
Git status shows me the files that are pending commit. Git diff -staged shows me precisely what's changed, so if there's a logically irrelevant change, I can remove that and save it for a later commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When I'm working on a special version, such as a translated version or one with a special feature that will never be in the master branch.

How do the diagrams help you visualize the branch structure?
Tautology.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
All changes in both branches since the split are saved in the new merged head, so the diagram has the branches rejoined.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Its faster, but it can make mistakes.
